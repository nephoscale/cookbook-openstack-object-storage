<%= node['openstack']['object-storage']['custom_template_banner'] %>
<%

pipeline = []

# https://docs.openstack.org/liberty/config-reference/content/proxy-server-conf.html

# the pipeline ordering is important and certain inclusions
# must either preceed or follow the selected auth module

if (node['openstack']['object-storage']['authmode'] == 'swauth' and node['openstack']['object-storage']['tempurl']['enabled'] == true)
  pipeline << 'tempurl'
end

if node['openstack']['object-storage']['domain_remap']['enabled']
  pipeline << 'domain_remap'
end

if node['openstack']['object-storage']['formpost']['enabled']
  pipeline << 'formpost'
end

case @authmode
when 'keystone'
  pipeline << 'authtoken'
  pipeline << 'keystoneauth'
when 'swauth'
  pipeline << 'swauth'
end

if node['openstack']['object-storage']['staticweb']['enabled']
  pipeline << 'staticweb'
end

if pipeline.include?('swauth')
   account_management = true
else
   account_management = false
end

-%>

[DEFAULT]
bind_ip = <%= @bind_host %>
bind_port = <%= @bind_port %>
workers = <%= node['openstack']['object-storage']['proxy-server']['workers'] %>
max_clients = <%= node['openstack']['object-storage']['proxy-server']['max_clients'] %>
<% if node['openstack']['object-storage']['statistics']['enabled'] -%>
log_statsd_host = localhost
log_statsd_port = 8125
log_statsd_default_sample_rate = <%= node['openstack']['object-storage']['statistics']['sample_rate'] %>
log_statsd_metric_prefix = <%= node['openstack']['object-storage']['statistics']['statsd_prefix'] %>.<%= node['hostname'] %>
<% end %>

[pipeline:main]
pipeline = catch_errors gatekeeper healthcheck cache ratelimit <%= pipeline.join(' ') %> container-quotas account-quotas slo dlo versioned_writes proxy-logging proxy-server

[app:proxy-server]
use = egg:swift#proxy
allow_account_management = true
node_timeout = <%= node['openstack']['object-storage']['proxy-server']['node_timeout'] %>
<% if pipeline.include?('keystoneauth') -%>
account_autocreate = true
<% end %>

<% if pipeline.include?('swauth') -%>
[filter:swauth]
use = egg:swauth#swauth
super_admin_key = <%= @authkey %>
default_swift_cluster = local#<%= node['openstack']['object-storage']['swift_url'] %>#<%= node['openstack']['object-storage']['swauth_url'] %>
<% if pipeline.include?('tempurl') -%>
allow_overrides = true
<% end %>
<% if node['openstack']['object-storage']['container-server']['allowed_sync_hosts'].any? -%>
allowed_sync_hosts = <%= node['openstack']['object-storage']['container-server']['allowed_sync_hosts'].join(',') %>
<% end %>
<% end %>

[filter:healthcheck]
use = egg:swift#healthcheck

[filter:cache]
use = egg:swift#memcache
memcache_servers = <%= @memcache_servers %>

[filter:ratelimit]
use = egg:swift#ratelimit

[filter:domain_remap]
use = egg:swift#domain_remap
set log_name = <%= node['openstack']['object-storage']['domain_remap']['log_name'] %>
set log_facility = <%= node['openstack']['object-storage']['domain_remap']['log_facility'] %>
set log_level = <%= node['openstack']['object-storage']['domain_remap']['log_level'] %>
set log_headers = <%= node['openstack']['object-storage']['domain_remap']['log_headers'] %>
storage_domain = <%= node['openstack']['object-storage']['domain_remap']['storage_domain'] %>
path_root = <%= node['openstack']['object-storage']['domain_remap']['path_root'] %>
reseller_prefixes = <%= node['openstack']['object-storage']['domain_remap']['reseller_prefixes'] %>

[filter:catch_errors]
use = egg:swift#catch_errors

[filter:cname_lookup]
use = egg:swift#cname_lookup

[filter:staticweb]
use = egg:swift#staticweb
cache_timeout = <%= node['openstack']['object-storage']['staticweb']['cache_timeout'] %>
set log_name = <%= node['openstack']['object-storage']['staticweb']['log_name'] %>
set log_facility = <%= node['openstack']['object-storage']['staticweb']['log_facility'] %>
set log_level = <%= node['openstack']['object-storage']['staticweb']['log_level'] %>
set access_log_name = <%= node['openstack']['object-storage']['staticweb']['access_log_name'] %>
set access_log_facility = <%= node['openstack']['object-storage']['staticweb']['access_log_facility'] %>
set access_log_level = <%= node['openstack']['object-storage']['staticweb']['access_log_level'] %>
set log_headers = <%= node['openstack']['object-storage']['staticweb']['log_headers'] %>

# Note: Put after auth in the pipeline.
[filter:container-quotas]
use = egg:swift#container_quotas

# Note: Put after auth in the pipeline.
[filter:account-quotas]
use = egg:swift#account_quotas

[filter:gatekeeper]
use = egg:swift#gatekeeper
# You can override the default log routing for this filter here:
# set log_name = gatekeeper
# set log_facility = LOG_LOCAL0
# set log_level = INFO
# set log_headers = false
# set log_address = /dev/log

# Note: Put after auth and staticweb in the pipeline.
[filter:slo]
use = egg:swift#slo
# max_manifest_segments = 1000
# max_manifest_size = 2097152
# min_segment_size = 1048576
# Start rate-limiting SLO segment serving after the Nth segment of a
# segmented object.
# rate_limit_after_segment = 10
#
# Once segment rate-limiting kicks in for an object, limit segments served
# to N per second. 0 means no rate-limiting.
# rate_limit_segments_per_sec = 0
#
# Time limit on GET requests (seconds)
# max_get_time = 86400

# Note: Put after auth and staticweb in the pipeline.
# If you don't put it in the pipeline, it will be inserted for you.
[filter:dlo]
use = egg:swift#dlo
# Start rate-limiting DLO segment serving after the Nth segment of a
# segmented object.
# rate_limit_after_segment = 10
#
# Once segment rate-limiting kicks in for an object, limit segments served
# to N per second. 0 means no rate-limiting.
# rate_limit_segments_per_sec = 1
#
# Time limit on GET requests (seconds)
# max_get_time = 86400

[filter:tempurl]
use = egg:swift#tempurl
incoming_remove_headers = <%= node['openstack']['object-storage']['tempurl']['incoming_remove_headers'] %>
incoming_allow_headers = <%= node['openstack']['object-storage']['tempurl']['incoming_allow_headers'] %>
outgoing_remove_headers = <%= node['openstack']['object-storage']['tempurl']['outgoing_remove_headers'] %>
outgoing_allow_headers = <%= node['openstack']['object-storage']['tempurl']['outgoing_allow_headers'] %>

[filter:formpost]
use = egg:swift#formpost

<% if pipeline.include?('authtoken') -%>
[filter:authtoken]
paste.filter_factory = keystoneclient.middleware.auth_token:filter_factory
auth_uri = <%= @auth_uri %>
identity_uri = <%= @identity_uri %>
auth_version = <%= node['openstack']['object-storage']['api']['auth']['version'] %>
admin_tenant_name = <%= node['openstack']['object-storage']['service_tenant_name'] %>
admin_user = <%= node['openstack']['object-storage']['service_user'] %>
admin_password = <%= @service_pass %>
signing_dir = <%= node['openstack']['object-storage']['api']['auth']['cache_dir'] %>
insecure = True
delay_auth_decision = True

[filter:keystoneauth]
use = egg:swift#keystoneauth
# operator_roles = admin, swiftoperator
# instead we give it to everyone
operator_roles = admin, _member_
<% end %>

# Note: Put after slo, dlo in the pipeline.
# If you don't put it in the pipeline, it will be inserted automatically.
[filter:versioned_writes]
use = egg:swift#versioned_writes
# Enables using versioned writes middleware and exposing configuration
# settings via HTTP GET /info.
# WARNING: Setting this option bypasses the "allow_versions" option
# in the container configuration file, which will be eventually
# deprecated. See documentation for more details.
allow_versioned_writes = true

[filter:proxy-logging]
use = egg:swift#proxy_logging
